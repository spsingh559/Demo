version: '2'
services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    expose:
      - 27017
    ports:
      - 27017:27017
  redis:
    container_name: redis
    image: smebberson/alpine-redis
    restart: always
    expose:
      - 6379
    ports:
      - 6379:6379
  microservice-mesh-base:
    container_name: microservice-mesh-base
    build: microservices/microservice-mesh-base
    image: boilerplate/mesh-base
    network_mode: host
    restart: always
  microservice-profile:
    container_name: microservice-profile
    build: microservices/microservice-profile
    image: boilerplate/profile
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/boilerplate-production'
  microservice-analytics:
    container_name: microservice-analytics
    build: microservices/microservice-analytics
    image: boilerplate/analytics
    network_mode: host
    restart: always
    depends_on:
        - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/analytics'
  microservice-accounts:
    container_name: microservice-accounts
    build: microservices/microservice-accounts
    image: boilerplate/accounts
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/boilerplate-production'
  microservice-lobby:
    container_name: microservice-lobby
    build: microservices/microservice-lobby
    image: boilerplate/lobby-operations
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/boilerplate-production'
  microservice-notification:
    container_name: microservice-notification
    build: microservices/microservice-notification
    image: boilerplate/notification
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/notificationDB'
  microservice-jwt:
    container_name: microservice-jwt
    build: microservices/microservice-jwt
    image: boilerplate/jwt
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
  microservice-alltopics:
    container_name: microservice-alltopics
    build: microservices/allTopics
    image: boilerplate/alltopics
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
      - mongo
    environment:
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB_NAME: quizRT4
  microservice-analytics:
    build: microservices/microservice-analytics1
    image: boilerplate/microservice-analytics
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
      - mongo
    environment:
      MONGO_URL: 'mongodb://localhost:27017/analytics'
  microservice-badges:
    container_name: microservice-badges
    build: microservices/microservice-badges
    image: boilerplate/badges
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: 'mongodb://localhost:27017/Counters'
  microservice-gameplay:
    container_name: microservice-gameplay
    build: microservices/microservice-gameplay
    image: quizart/gameplay
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      MONGO_URL: mongodb://localhost:27017/quizRT4
  http-server0:
    container_name: http-server0
    build: microservices/http-server
    image: boilerplate/http-server
    network_mode: host
    restart: always
    depends_on:
      - microservice-mesh-base
    environment:
      REDIRECT_HOST: quizart.stackroute.in
      REDIRECT_PORT: 80
      PORT: 8001
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      TWITTER_CONSUMER_SECRET : ''
      TWITTER_CONSUMER_KEY : ''
      GOOGLE_CLIENT_ID : ''
      GOOGLE_CLIENT_SECRET : ''
      NAME: Westeros
